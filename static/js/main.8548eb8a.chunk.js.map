{"version":3,"sources":["components/social-profile/Profile.jsx","components/statistics/Statistics.jsx","components/friends-list/Friend.jsx","components/friends-list/Friends-list.jsx","components/transaction-history/Transaction-history.jsx","App.js","reportWebVitals.js","index.js"],"names":["Profile","props","username","tag","avatar","location","stats","class","src","alt","followers","views","likes","Statistic","title","map","item","label","percentage","id","Friend","name","status","width","FriendsList","friends","friend","isOnline","TransactionHistory","items","type","amount","currency","App","user","Statistics","data","transaction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"owGAuCeA,MArCf,SAAiBC,GACf,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,OAAQC,EAAoBJ,EAApBI,SAAUC,EAAUL,EAAVK,MACzC,OACE,sBAAKC,MAAM,UAAX,UACE,sBAAKA,MAAM,cAAX,UACE,qBAAKC,IAAKJ,EAAQK,IAAI,cAAcF,MAAM,WAC1C,mBAAGA,MAAM,OAAT,SAAiBL,IACjB,oBAAGK,MAAM,MAAT,cAAiBJ,KACjB,mBAAGI,MAAM,WAAT,SAAqBF,OAGvB,qBAAIE,MAAM,QAAV,UACE,+BACE,sBAAMA,MAAM,QAAZ,uBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMI,eAEhC,+BACE,sBAAMH,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMK,WAEhC,+BACE,sBAAMJ,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMM,kB,OCCzBC,MAvBf,SAAmBZ,GACjB,IAAQa,EAAiBb,EAAjBa,MAAOR,EAAUL,EAAVK,MACf,OACE,0BAASC,MAAM,aAAf,UACGO,GAAS,oBAAIP,MAAM,QAAV,SAAmBO,IAC7B,oBAAIP,MAAM,YAAV,SACGD,EAAMS,KAAI,SAAAC,GAAI,OACb,qBAAIT,MAAM,OAAV,UACE,sBAAMA,MAAM,GAAZ,SAAgBS,EAAKC,QACrB,uBAAMV,MAAM,GAAZ,UAAgBS,EAAKE,WAArB,SAFoBF,EAAKG,a,OCUtBC,MAjBf,SAAgBnB,GACd,IAAQoB,EAAyBpB,EAAzBoB,KAAMjB,EAAmBH,EAAnBG,OAAQkB,EAAWrB,EAAXqB,OACtB,OACE,qBAAIf,MAAM,OAAV,UACE,sBAAMA,MAAM,SAAZ,SAAsBe,IACtB,qBAAKf,MAAM,SAASC,IAAKJ,EAAQK,IAAI,cAAcc,MAAM,OACzD,mBAAGhB,MAAM,OAAT,SAAiBc,QCmBRG,MAxBf,YAAmC,IAAZC,EAAW,EAAXA,QACrB,OACE,6BACGA,EAAQV,KAAI,SAAAW,GAAM,OACjB,6BACE,cAAC,EAAD,CACEL,KAAMK,EAAOL,KACbjB,OAAQsB,EAAOtB,OACfkB,OAAQI,EAAOC,YAJVD,EAAOP,U,OC0BTS,MA/Bf,YAAwC,IAAVC,EAAS,EAATA,MAC5B,OACE,wBAAOtB,MAAM,sBAAb,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGsB,EAAMd,KAAI,SAAAC,GAAI,OACb,+BACE,6BAAKA,EAAKc,OACV,6BAAKd,EAAKe,SACV,6BAAKf,EAAKgB,aAHHhB,EAAKG,a,OCcTc,MAjBf,WACE,OACE,gCACE,cAAC,EAAD,CACE/B,SAAUgC,EAAKhC,SACfC,IAAK+B,EAAK/B,IACVE,SAAU6B,EAAK7B,SACfD,OAAQ8B,EAAK9B,OACbE,MAAO4B,EAAK5B,QAEd,cAAC6B,EAAD,CAAY7B,MAAO8B,IACnB,cAAC,EAAD,CAAaX,QAASA,IACtB,cAAC,EAAD,CAAoBI,MAAOQ,QCZlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8548eb8a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Profile(props) {\r\n  const { username, tag, avatar, location, stats } = props;\r\n  return (\r\n    <div class=\"profile\">\r\n      <div class=\"description\">\r\n        <img src={avatar} alt=\"User avatar\" class=\"avatar\" />\r\n        <p class=\"name\">{username}</p>\r\n        <p class=\"tag\">@{tag}</p>\r\n        <p class=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul class=\"stats\">\r\n        <li>\r\n          <span class=\"label\">Followers</span>\r\n          <span class=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span class=\"label\">Views</span>\r\n          <span class=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span class=\"label\">Likes</span>\r\n          <span class=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Statistic(props) {\r\n  const { title, stats } = props;\r\n  return (\r\n    <section class=\"statistics\">\r\n      {title && <h2 class=\"title\">{title}</h2>}\r\n      <ul class=\"stat-list\">\r\n        {stats.map(item => (\r\n          <li class=\"item\" key={item.id}>\r\n            <span class=\"\">{item.label}</span>\r\n            <span class=\"\">{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistic.propTypes = {\r\n  title: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistic;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Friend(props) {\r\n  const { name, avatar, status } = props;\r\n  return (\r\n    <li class=\"item\">\r\n      <span class=\"status\">{status}</span>\r\n      <img class=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\r\n      <p class=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nFriend.propTypes = {\r\n  status: PropTypes.bool.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Friend;\r\n","import PropTypes from 'prop-types';\r\nimport Friend from './Friend';\r\n\r\nfunction FriendsList({ friends }) {\r\n  return (\r\n    <ul>\r\n      {friends.map(friend => (\r\n        <li key={friend.id}>\r\n          <Friend\r\n            name={friend.name}\r\n            avatar={friend.avatar}\r\n            status={friend.isOnline}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendsList;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table class=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import Profile from './components/social-profile/Profile';\nimport user from './components/social-profile/user.json';\n\nimport Statistics from './components/statistics/Statistics';\nimport data from './components/statistics/data.json';\n\nimport FriendsList from './components/friends-list/Friends-list';\nimport friends from './components/friends-list/friends.json';\n\nimport TransactionHistory from './components/transaction-history/Transaction-history';\nimport transaction from './components/transaction-history/transaction.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics stats={data} />\n      <FriendsList friends={friends} />\n      <TransactionHistory items={transaction} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
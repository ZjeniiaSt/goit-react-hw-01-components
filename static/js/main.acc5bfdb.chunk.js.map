{"version":3,"sources":["social-profile/Profile.jsx","friends-list/Friend.jsx","friends-list/Friends-list.jsx","statistics/Statistic.jsx","statistics/Statistics-table.jsx","App.js","reportWebVitals.js","index.js"],"names":["Profile","props","username","tag","avatar","location","statsFollowers","statsViews","statsLikes","class","src","alt","Friend","name","status","width","FriendsList","friends","map","friend","isOnline","id","Statictic","title","stats","StatistscsTable","items","item","label","percentage","App","user","followers","views","likes","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4xCAgDeA,MA9Cf,SAAiBC,GACf,IACEC,EAOED,EAPFC,SACAC,EAMEF,EANFE,IACAC,EAKEH,EALFG,OACAC,EAIEJ,EAJFI,SACAC,EAGEL,EAHFK,eACAC,EAEEN,EAFFM,WACAC,EACEP,EADFO,WAEF,OACE,sBAAKC,MAAM,UAAX,UACE,sBAAKA,MAAM,cAAX,UACE,qBAAKC,IAAKN,EAAQO,IAAI,cAAcF,MAAM,WAC1C,mBAAGA,MAAM,OAAT,SAAiBP,IACjB,mBAAGO,MAAM,MAAT,SAAgBN,IAChB,mBAAGM,MAAM,WAAT,SAAqBJ,OAGvB,qBAAII,MAAM,QAAV,UACE,+BACE,sBAAMA,MAAM,QAAZ,uBACA,sBAAMA,MAAM,WAAZ,SAAwBH,OAE1B,+BACE,sBAAMG,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBF,OAE1B,+BACE,sBAAME,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,c,OCbnBI,MAjBf,SAAgBX,GACd,IAAQY,EAAyBZ,EAAzBY,KAAMT,EAAmBH,EAAnBG,OAAQU,EAAWb,EAAXa,OACtB,OACE,qBAAIL,MAAM,OAAV,UACE,sBAAMA,MAAM,SAAZ,SAAsBK,IACtB,qBAAKL,MAAM,SAASC,IAAKN,EAAQO,IAAI,cAAcI,MAAM,OACzD,mBAAGN,MAAM,OAAT,SAAiBI,QCmBRG,MAxBf,YAAmC,IAAZC,EAAW,EAAXA,QACrB,OACE,6BACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,6BACE,cAAC,EAAD,CACEN,KAAMM,EAAON,KACbT,OAAQe,EAAOf,OACfU,OAAQK,EAAOC,YAJVD,EAAOE,U,OCSTC,MAdf,SAAmBrB,GACjB,IAAQsB,EAAiBtB,EAAjBsB,MAAOC,EAAUvB,EAAVuB,MACf,OACE,+BACE,sBAAMf,MAAM,QAAZ,SAAqBc,IACrB,sBAAMd,MAAM,aAAZ,SAA0Be,QCgBjBC,MApBf,YAAqC,IAAVC,EAAS,EAATA,MACzB,OACE,0BAASjB,MAAM,aAAf,UACE,oBAAIA,MAAM,QAAV,0BAEA,oBAAIA,MAAM,YAAV,SACGiB,EAAMR,KAAI,SAAAS,GAAI,OACb,oBAAIlB,MAAM,OAAV,SACE,cAAC,EAAD,CAAWc,MAAOI,EAAKC,MAAOJ,MAAOG,EAAKE,cADtBF,EAAKN,a,OCiBtBS,MAlBf,WACE,OACE,gCACE,cAAC,EAAD,CACE5B,SAAU6B,EAAK7B,SACfC,IAAK4B,EAAK5B,IACVE,SAAU0B,EAAK1B,SACfD,OAAQ2B,EAAK3B,OACbE,eAAgByB,EAAKP,MAAMQ,UAC3BzB,WAAYwB,EAAKP,MAAMS,MACvBzB,WAAYuB,EAAKP,MAAMU,QAEzB,cAAC,EAAD,CAAiBR,MAAOS,IACxB,cAAC,EAAD,CAAalB,QAASA,QCVbmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.acc5bfdb.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Profile(props) {\r\n  const {\r\n    username,\r\n    tag,\r\n    avatar,\r\n    location,\r\n    statsFollowers,\r\n    statsViews,\r\n    statsLikes,\r\n  } = props;\r\n  return (\r\n    <div class=\"profile\">\r\n      <div class=\"description\">\r\n        <img src={avatar} alt=\"User avatar\" class=\"avatar\" />\r\n        <p class=\"name\">{username}</p>\r\n        <p class=\"tag\">{tag}</p>\r\n        <p class=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul class=\"stats\">\r\n        <li>\r\n          <span class=\"label\">Followers</span>\r\n          <span class=\"quantity\">{statsFollowers}</span>\r\n        </li>\r\n        <li>\r\n          <span class=\"label\">Views</span>\r\n          <span class=\"quantity\">{statsViews}</span>\r\n        </li>\r\n        <li>\r\n          <span class=\"label\">Likes</span>\r\n          <span class=\"quantity\">{statsLikes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  statsFollowers: PropTypes.number.isRequired,\r\n  statsViews: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Friend(props) {\r\n  const { name, avatar, status } = props;\r\n  return (\r\n    <li class=\"item\">\r\n      <span class=\"status\">{status}</span>\r\n      <img class=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\r\n      <p class=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nFriend.propTypes = {\r\n  status: PropTypes.bool.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Friend;\r\n","import PropTypes from 'prop-types';\r\nimport Friend from './Friend';\r\n\r\nfunction FriendsList({ friends }) {\r\n  return (\r\n    <ul>\r\n      {friends.map(friend => (\r\n        <li key={friend.id}>\r\n          <Friend\r\n            name={friend.name}\r\n            avatar={friend.avatar}\r\n            status={friend.isOnline}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendsList;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Statictic(props) {\r\n  const { title, stats } = props;\r\n  return (\r\n    <li>\r\n      <span class=\"label\">{title}</span>\r\n      <span class=\"percentage\">{stats}</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nStatictic.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.number,\r\n};\r\nexport default Statictic;\r\n","import PropTypes from 'prop-types';\r\nimport Statictic from './Statistic';\r\n\r\nfunction StatistscsTable({ items }) {\r\n  return (\r\n    <section class=\"statistics\">\r\n      <h2 class=\"title\">Upload stats</h2>\r\n\r\n      <ul class=\"stat-list\">\r\n        {items.map(item => (\r\n          <li class=\"item\" key={item.id}>\r\n            <Statictic title={item.label} stats={item.percentage} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistscsTable.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape),\r\n};\r\n\r\nexport default StatistscsTable;\r\n","import Profile from './social-profile/Profile';\nimport user from './social-profile/user.json';\n\nimport FriendsList from './friends-list/Friends-list';\nimport friends from './friends-list/friends.json';\n\nimport StatistscsTable from './statistics/Statistics-table';\nimport data from './statistics/data.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        statsFollowers={user.stats.followers}\n        statsViews={user.stats.views}\n        statsLikes={user.stats.likes}\n      />\n      <StatistscsTable items={data} />\n      <FriendsList friends={friends} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}